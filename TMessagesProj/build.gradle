apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'

repositories {
    mavenCentral()
    google()
}

configurations {
    compile.exclude module: 'support-v4'
}

configurations.all {
    exclude group: 'com.google.firebase', module: 'firebase-core'
    exclude group: 'androidx.recyclerview', module: 'recyclerview'
}

dependencies {
    implementation 'androidx.core:core:1.6.0'
    implementation 'androidx.palette:palette:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.3.3'
    implementation 'androidx.dynamicanimation:dynamicanimation:1.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation "androidx.sharetarget:sharetarget:1.1.0"
    implementation 'com.google.android.material:material:1.3.0'

    compileOnly 'org.checkerframework:checker-qual:2.5.2'
    compileOnly 'org.checkerframework:checker-compat-qual:2.5.0'
    implementation 'com.google.firebase:firebase-messaging:22.0.0'
    implementation 'com.google.firebase:firebase-config:21.0.1'
    implementation 'com.google.firebase:firebase-datatransport:18.1.0'
    implementation 'com.google.firebase:firebase-appindexing:20.0.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.1'
    implementation 'com.google.android.gms:play-services-auth:19.2.0'
    implementation 'com.google.android.gms:play-services-vision:20.1.3'
    implementation 'com.google.android.gms:play-services-wearable:17.1.0'
    implementation 'com.google.android.gms:play-services-location:18.0.0'
    implementation 'com.google.android.gms:play-services-wallet:18.1.3'
    implementation 'com.googlecode.mp4parser:isoparser:1.0.6'
    implementation 'com.stripe:stripe-android:2.0.2'
    implementation files('libs/libgsaverification-client.aar')

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    implementation "androidx.core:core-ktx:+"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

}

//return an api key from a properties file.
static def getAppID() {
    Properties properties = new Properties()
    properties.load(new FileInputStream("./API_KEYS"))

    return properties.get("APP_ID")
}

static def getAppHash() {
    Properties properties = new Properties()
    properties.load(new FileInputStream("./API_KEYS"))

    return "\"" + properties.get("APP_HASH") + "\""
}

static def getNativeCoreCount() {
    Properties properties = new Properties()
    properties.load(new FileInputStream("./local.properties"))

    println("Using ${properties.getProperty("native.build.cores", "16")} cores for native build")

    return "-j=" + properties.getProperty("native.build.cores", "16")
}

android {
    compileSdkVersion 31
    buildToolsVersion '31.0.0'
    ndkVersion "21.4.7075529"

    defaultConfig.applicationId = "com.exteragram.messenger"

    sourceSets.main.jniLibs.srcDirs = ['./jni/']

    externalNativeBuild {
        cmake {
            path 'jni/CMakeLists.txt'
        }
    }

    lintOptions {
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
        disable 'BlockedPrivateApi'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8

        coreLibraryDesugaringEnabled true
    }

    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            applicationIdSuffix ".beta"
            minifyEnabled true
            shrinkResources true
            multiDexEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'boolean', 'DEBUG_VERSION', 'true'
        }

        release {
            debuggable false
            jniDebuggable false
            minifyEnabled true
            shrinkResources true
            multiDexEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets.debug {
        manifest.srcFile 'config/debug/AndroidManifest_SDK23.xml'
    }

    sourceSets.release {
        manifest.srcFile 'config/release/AndroidManifest.xml'
    }

    flavorDimensions "minApi"

    productFlavors {
        armv7 {
            ndk {
                abiFilters "armeabi-v7a"
            }
            ext {
                abiVersionCode = 1
            }
        }
        x86 {
            ndk {
                abiFilters "x86"
            }
            ext {
                abiVersionCode = 2
            }
        }
        arm64 {
            ndk {
                abiFilters "arm64-v8a"
            }
            ext {
                abiVersionCode = 3
            }
        }
        x64 {
            ndk {
                abiFilters "x86_64"
            }
            ext {
                abiVersionCode = 4
            }
        }
        afat {
            ndk {
                abiFilters "armeabi-v7a"
            }
            sourceSets.release {
                manifest.srcFile 'config/release/AndroidManifest_SDK23.xml'
            }
            ext {
                abiVersionCode = 5
            }
        }
        beta {
            ndk {
                abiFilters "armeabi-v7a"
            }
            sourceSets.debug {
                manifest.srcFile 'config/debug/AndroidManifest_SDK23.xml'
            }
            ext {
                abiVersionCode = 6
            }
        }
    }

    defaultConfig.versionCode = 2495

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def buildtype = variant.productFlavors[0].name
            if (variant.productFlavors[0].name != "beta") {
                buildtype = "release";
            }
            def date = new Date()
            def formattedDate = date.format('ddMMyyyy')

            outputFileName = "exteragram-${buildtype}-${formattedDate}.apk"
            output.versionCodeOverride = defaultConfig.versionCode * 10 + variant.productFlavors.get(0).abiVersionCode
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name
        if (variant.buildType.name != "release" && !names.contains("beta")) {
            setIgnore(true)
        }
        if (variant.buildType.name != "debug" && names.contains("beta")) {
            setIgnore(true)
        }
    }

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        versionName "8.3.1"

        vectorDrawables.generatedDensities = ['mdpi', 'hdpi', 'xhdpi', 'xxhdpi']
        //obtain your own keys at https://core.telegram.org/api/obtaining_api_id
        buildConfigField 'int', 'APP_ID', getAppID()
        buildConfigField 'String', 'APP_HASH', getAppHash()

        externalNativeBuild {
            cmake {
                version '3.10.2'
                arguments '-DANDROID_STL=c++_static', '-DANDROID_PLATFORM=android-16', getNativeCoreCount()
            }
        }
    }
    dependenciesInfo.includeInApk false
}

